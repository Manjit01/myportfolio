{"version":3,"sources":["layout/Style.js","layout/TabPanel.js","api/data.js","components/personalDetail/personalDetail.js","components/exeperience/exListItem.js","components/exeperience/experience.js","components/skills/skillSets.js","components/skills/skillChart.js","components/skills/skills.js","components/portfolio/portfolioListItem.js","components/portfolio/portfolio.js","components/education/educationList.js","components/education/certifications.js","components/education/education.js","layout/Tabs.js","layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","textAlign","alignItems","backgroundColor","palette","background","paper","fullWidthRoot","width","cardRoot","height","cardRootSm","centerContainer","padding","griItemMargin","margin","leftContainer","portContainer","portContainerLg","coverimg","paddingTop","coverimgLg","paddingBottom","mediaImage","mediaImageMd","avatarLarge","spacing","marginLeft","avatarLargeSquare","coverimgSm","tabs","title","fontSize","fontWeigt","color","fontFamily","pageTitle","titleSmall","listContainer","exlistContainer","educationListContainer","listItem","marginBottom","listTitle","fontWeight","lineHeight","listTitleSmall","wordBreak","buttonListSpan","listAvatar","display","itemAlignGridCenter","alignContent","itemAlignGridCenterSm","displayBlock","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","profileDetail","name","number","position","emailId","image","address","linkedAccounts","linkedIn","github","degreeName","collageUniName","location","year","fe","percent","be","db","cloud","learning","framework","javascriptLibrary","tools","company","url","positionType","start","end","companyLogo","responsibilities","certificateFrom","issueDate","description","tech","PersonalDetail","matches","useMediaQuery","classes","contactInfo","lg","LinkedAccounts","Grid","container","justify","item","href","rel","EmailRounded","style","Call","target","GitHub","LinkedIn","CardMedia","className","Container","ExperienceListItem","useState","roles","setRoles","exlistItem","experience","setExperience","useEffect","res","populateListworks","List","map","i","s","ListItem","key","FiberManualRecordRounded","divider","ListItemAvatar","Avatar","src","sizes","ListItemText","primary","secondary","md","xs","sm","xl","Experience","experienceInfo","ex","SkillSets","skillSet","skills","setSkills","Divider","SkillChart","data","bgcolor","labels","forEach","skill","push","tempHex","Math","floor","random","toString","r","parseInt","substring","g","b","randomColor","dataset","datasets","console","log","dataforPolar","Skills","FrontEndSkills","BackEndSkills","DatabaseSkills","CloudSkills","LearningSkills","FrameworkSkills","Libraries","Tools","views","setViews","renderSkill","ToggleButtonGroup","size","exclusive","onChange","ToggleButton","PieChart","PortfolioListItem","portfolio","setPortfolio","techList","setTechList","ports","Card","onClick","window","open","onMouseOver","CardActionArea","CardContent","Typography","gutterBottom","variant","component","Chip","label","Portfoilio","PortfolioList","port","EducationList","education","setEducation","CertificateList","certificate","setCertificate","Education","educationList","certificateList","cer","edu","a11yProps","LayoutTabs","React","setValue","Tabs","event","newValue","aria-label","scrollButtons","Tab","Layout","Paper","elevation","App","Fragment","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d005e87.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  fullWidthRoot: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n\n  cardRoot: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    height: \"370px\",\n  },\n\n  cardRootSm: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  centerContainer: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n    padding: \"5%\",\n  },\n\n  griItemMargin: {\n    margin: \"5px\",\n  },\n  leftContainer: {\n    textAlign: \"left\",\n    alignItems: \"left\",\n    padding: \"5%\",\n  },\n  portContainer: {\n    textAlign: \"left\",\n    alignItems: \"left\",\n    padding: \"3%\",\n    height: \"auto\",\n  },\n\n  portContainerLg: {\n    textAlign: \"left\",\n    alignItems: \"left\",\n    padding: \"3%\",\n    height: \"auto\",\n  },\n  coverimg: {\n    height: \"350px\",\n    paddingTop: \"20%\",\n  },\n  coverimgLg: {\n    height: \"100%\",\n    paddingTop: \"20%\",\n    paddingBottom: \"10%\",\n  },\n  mediaImage: {\n    paddingTop: \"30%\",\n  },\n  mediaImageMd: {\n    paddingTop: \"10%\",\n  },\n  avatarLarge: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n    marginLeft: \"30%\",\n  },\n\n  avatarLargeSquare: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n  },\n  coverimgSm: {\n    height: \"100%\",\n    paddingTop: \"20%\",\n  },\n  tabs: {\n    textAlign: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 60,\n    fontWeigt: \"Bolder\",\n    color: \"white\",\n    fontFamily: \"monospace\",\n  },\n  pageTitle: {\n    fontSize: 25,\n    fontWeigt: \"Bolder\",\n  },\n  titleSmall: {\n    fontSize: 25,\n    fontWeigt: \"Bolder\",\n    color: \"white\",\n    fontFamily: \"monospace\",\n  },\n\n  listContainer: {\n    padding: \"2% !important\",\n    width: \"80%\",\n  },\n  exlistContainer: {\n    padding: \"2% !important\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  educationListContainer: {\n    padding: \"2% !important\",\n    width: \"80%\",\n    textAlign: \"center\",\n  },\n  listItem: {\n    padding: \"0%\",\n    marginBottom: \"5px\",\n  },\n  listTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    padding: \"0%\",\n    marginLeft: \"0%\",\n    lineHeight: \"0\",\n  },\n  listTitleSmall: {\n    padding: \"0%\",\n    marginLeft: \"0%\",\n    lineHeight: \"0\",\n    wordBreak: \"break-word\",\n  },\n  buttonListSpan: {\n    padding: \"1%\",\n    margin: \"1%\",\n    lineHeight: \"0\",\n    wordBreak: \"break-word\",\n    fontWeight: \"500\",\n  },\n  listAvatar: {\n    display: \"inline\",\n    margin: \"auto\",\n  },\n  itemAlignGridCenter: {\n    alignContent: \"center\",\n    display: \"grid\",\n    width: \"175px\",\n  },\n  itemAlignGridCenterSm: {\n    alignContent: \"center\",\n    display: \"grid\",\n    width: \"100%\",\n  },\n  displayBlock: {\n    display: \"block\",\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '@material-ui/core'\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};","export const profileDetail = {\n  personalDetail: {\n    name: \"MANJIT KAUR\",\n    number: \"+64273349511\",\n    position: \"Full Stack Developer\",\n    emailId: \"roop.manjit.kaur@gmail.com\",\n    image:\n      \"https://user-images.githubusercontent.com/37615590/92415169-d72d6700-f1ab-11ea-9d92-4945f988b658.jpg\",\n    address: \"9, Scarr Lane, Pyes Pa, Tauranga-3112\",\n    linkedAccounts: {\n      linkedIn: \"https://www.linkedin.com/in/manjit-kaur-8b602815b/\",\n      github: \"https://github.com/manjit01\",\n    },\n  },\n  education: [\n    {\n      degreeName: \"Software Developer Job Ready Programme\",\n      collageUniName: \"Industry Conenct, Auckland\",\n      location: \"Auckland, New Zealand\",\n      year: \"2020\",\n      image:\"https://www.industryconnect.org/wp-content/uploads/2017/11/Industry-Connect-logo-rev-Lrg.jpg\" },\n    {\n      degreeName: \"Post Graduate Diploma in Computer Science\",\n      collageUniName: \"The University of Waikato, Hamilton\",\n      location: \"Hamilton, New Zealand\",\n      year: \"2019\",\n      image: \"https://upload.wikimedia.org/wikipedia/en/thumb/b/bd/University_of_Waikato_logo.svg/1200px-University_of_Waikato_logo.svg.png\" \n    },\n    {\n      degreeName: \"Master in Electronics and Telecommunication Engineering\",\n      collageUniName:\n        \"Guru Nanak Dev University, Amritsar\",\n      location: \"Punjab, India\",\n      year: \"2014 - 2016\",\n      image:\n        \"https://upload.wikimedia.org/wikipedia/en/1/1a/Guru_Nanak_Dev_University_Logo.png\",\n    },\n    {\n      degreeName: \"Bachelor in Electronics and Telecommunication Engineering\",\n      collageUniName: \"Amritsar Group of Colleges, Amritsar \",\n      location: \"Punjab, India\",\n      year: \"2010 - 2014\",\n      image:\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTegUkQr5bvpeS-E4CSOeljQ0yxpb6QCSRfNg&usqp=CAU\" },\n  ],\n  skills: {\n    fe: [\n      { name: \"HTML\", percent: \"90\" },\n      { name: \"CSS\", percent: \"90\" },\n      { name: \"Js\", percent: \"80\" },\n    ],\n    be: [\n      { name: \"C#\", percent: \"80\" },\n      { name: \"ASP.NET MVC\", percent: \"80\" },\n      { name: \"WebApi\", percent: \"70\" },\n      { name: \"Linq\", percent: \"80\" },\n      { name: \"Entity Framework\", percent: \"70\" },\n     \n    ],\n    db: [\n      { name: \"Microsoft SQL Server\", percent: \"80\" },\n      { name: \"MongoDb\", percent: \"40\" },\n      { name: \"Azure SQL Db\", percent: \"30\" },\n    ],\n    cloud: [\n      { name: \"Azure\", percent: \"80\" },\n      { name: \"AWS\", percent: \"20\" },\n    ],\n\n    learning: [\n       { name: \"Python\", percent: \"20\" },\n    ],\n    framework: [\n      { name: \"Asp.net\", percent: \"70\" },\n      { name: \"Asp.net Core\", percent: \"65\" },\n      { name: \"Semantic-UI\", percent: \"75\" },\n      { name: \"Material-UI\", percent: \"75\" },\n      { name: \"Ant-Design UI\", percent: \"85\" },\n      { name: \"BootStrap\", percent: \"85\" },\n    ],\n    javascriptLibrary: [\n      { name: \"ReactJS\", percent: \"90\" },\n      { name: \"Webpack\", percent: \"45\" },\n    ],\n\n    tools: [\n      { name: \"Visual Studio\", percent: \"75\" },\n      { name: \"Visual Studio Code\", percent: \"65\" },\n      { name: \"GitHub\", percent: \"60\" },\n      { name: \"Jira\", percent: \"30\" },\n    ],\n  },\n  experience: [\n    {\n      company: \"MVP Studio\",\n      location: \"Auckland, New Zealand\",\n      url: \"https://mvp.studio/\",\n      position: \"Software Developer Intern\",\n      positionType: \"Intern\",\n      start: \"Feb 2020\",\n      end: \"Present\",\n      companyLogo:\n        \"https://media.glassdoor.com/sqll/2897345/mvp-studio-new-zealand-squarelogo-1562027244241.png\",\n\n      responsibilities: [\n        \"Making web applications by using  ReactJs, Redux and Semantic-UI .\",\n        \"Build REST API by using Asp.net Core WebApi with  authentication and authorization.\",\n        \"Using Azure Cloud for publishing a web app.\",\n        \"We used MSSQL Server and MongoDb for storing data.\",\n\n        \n      ],\n    },\n    {\n      company: \"The University of Waikato\",\n      location: \"Hamilton, New Zealand\",\n      url: \"https://www.waikato.ac.nz/\",\n      position: \"Software Developer Intern\",\n      positionType: \"Internship\",\n      start: \"July 2019\",\n      end: \"Oct 2019\",\n      companyLogo:\"https://upload.wikimedia.org/wikipedia/en/thumb/b/bd/University_of_Waikato_logo.svg/1200px-University_of_Waikato_logo.svg.png\",\n      responsibilities: [\n        \"Based on client requirements, designed an ‘ETL Cloud Application’ system.\",\n        \"Developed and tested ETL Cloud application using C# and agile dev process.\",\n        \"Employed SQL Server for creating databases.\",\n        \"Used Entity Framework for storing and accessing the data in the database.\",\n        \"Worked independently and proactively to meet the established timeline.\",\n      ],\n    },\n    {\n      company: \"MVP Studio\",\n      location: \"Auckland, New Zealand\",\n      url: \"https://mvp.studio/\",\n      position: \"Test Analyst\",\n      positionType: \"Intern\",\n      start: \"Dec 2017\",\n      end: \"May 2018\",\n      companyLogo:\n        \"https://media.glassdoor.com/sqll/2897345/mvp-studio-new-zealand-squarelogo-1562027244241.png\",\n      responsibilities: [\n        \"Worked in Agile environment and involved in stand up and sprint planning.\",\n        \"Prepared test cases and conditions manually and performed the automation testing using Selenium C# with Page Object Model, NUnit, Speclow and Extend Reports.\",\n        \"Executed exploratory testing to know the features and functionality of application.\",\n        \"Log defects and bugs and performed Regression Testing when the bug is fixed.\",\n        \" Provide Regular Testing status reports and communicate with developers by Jira tool.\",\n      ],\n    },\n  ],\n  certifications: [\n    {\n      name: \"Professional Software Developer Certification (PSDC)\",\n      certificateFrom: \"Industry Connect\",\n      url:\n        \"https://industryconnect.io/Authority/ViewCertificate?guid=333ebed2-26ee-4040-b814-4815dc28bae4\",\n      issueDate: \"May 2020\",\n      id: \"333ebed2-26ee-4040-b814-4815dc28bae4\",\n      image:\n        \"https://www.industryconnect.org/wp-content/uploads/2017/11/Industry-Connect-logo-rev-Lrg.jpg\",\n    },\n\n    {\n      name: \"ISTQB Certified Tester Foundation Level (ANZTB)\",\n      certificateFrom: \"ANZTB (Australia & NZ Testing Board)\",\n      url:\n        \"https://github.com/Manjit01/myportfolio/files/5191201/Scan.17.1.pdf\",\n      issueDate: \"Dec 2018\",\n      id: \"FND23197\",\n      image:\n        \"https://www.anztb.org/images/logo.gif\",\n    },\n  ],\n  portfolio: [\n   \n   {\n      name: \"Web Projects\",\n      url: \"https://github.com/manjit01\",\n      image: \"https://www.linickx.com/files/2011/08/octocat_darkwood_small.jpg\",\n      description:\n        \"A list of small projects which are helping me a lot to upgrade my skills.\",\n      tech: [\n        \"ReactJs\",\n        \"Redux\",\n        \"Webpack\",\n        \"C#\",\n        \"Asp.Net\",\n        \"Material-Ui\",\n        \"Asp.net Core\",\n        \"Api-Integration\",\n        \"Windows Forms\",\n        \"Asp.Net Forms\",\n        \"Javascript\",\n        \"HTML\",\n      ],\n    },\n  ],\n};\n","import React from \"react\";\nimport { profileDetail } from \"../../api/data\";\nimport { CardMedia, Container, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"../../layout/Style\";\nimport { EmailRounded, Call, GitHub, LinkedIn } from \"@material-ui/icons\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst PersonalDetail = () => {\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const classes = useStyles();\n  const contactInfo = profileDetail.personalDetail;\n  const lg = useMediaQuery(\"(min-width:1200px)\");\n\n  const LinkedAccounts = () => {\n    return (\n      <Grid container justify=\"center\" spacing={3}>\n        <Grid item>\n          <a href={\"mailto:\" + contactInfo.emailId} rel=\"noopener noreferrer\">\n            <EmailRounded\n              fontSize=\"large\"\n              color=\"action\"\n              style={{ color: \"white\" }}\n            />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href={\"tel:\" + contactInfo.number} rel=\"noopener noreferrer\">\n            <Call fontSize=\"large\" color=\"action\" style={{ color: \"white\" }} />\n          </a>\n        </Grid>\n        <Grid item>\n          <a\n            href={contactInfo.linkedAccounts.github}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GitHub\n              fontSize=\"large\"\n              color=\"action\"\n              style={{ color: \"white\" }}\n            />\n          </a>\n        </Grid>\n        <Grid item>\n          <a\n            href={contactInfo.linkedAccounts.linkedIn}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <LinkedIn\n              fontSize=\"large\"\n              color=\"action\"\n              style={{ color: \"white\" }}\n            />\n          </a>\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <div>\n      <CardMedia\n        className={\n          matches\n            ? lg\n              ? classes.coverimgLg\n              : classes.coverimg\n            : classes.coverimgSm\n        }\n        image={contactInfo.image}\n      >\n        <Container>\n          <label className={classes.title}> {contactInfo.name}</label>\n          <br></br>\n          <h4 className={classes.titleSmall}>{contactInfo.position}</h4>\n          <p className={classes.titleSmall}>\n            <b>\n            I am a full stack software developer working as an intern in MVP Studio. \n            I am always passionate about learning new technologies and always find time to implement new by learning in demand technologies.\n             Always committed to develop myself to achieve better results is my passion.\n            </b>\n          </p>\n        </Container>\n        <Container>\n          <LinkedAccounts></LinkedAccounts>\n        </Container>\n      </CardMedia>\n    </div>\n  );\n};\nexport default PersonalDetail;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  ListItem,\n  Avatar,\n  ListItemAvatar,\n  ListItemText,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../layout/Style\";\nimport { FiberManualRecordRounded } from \"@material-ui/icons\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst ExperienceListItem = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const lg = useMediaQuery(\"(min-width:1200px)\");\n  const [roles, setRoles] = useState([]);\n  const [experience, setExperience] = useState(props.exlistItem);\n  useEffect(() => {\n    if (props.exlistItem) {\n      var data = props.exlistItem;\n      var res = data.responsibilities;\n      setExperience(props.exlistItem);\n      setRoles(res);\n    }\n  }, [props.exlistItem]);\n  const populateAvatar = () => {\n    return (\n      <ListItemAvatar className={classes.listAvatar}>\n        <Grid item>\n          <Avatar\n            className={classes.avatarLarge}\n            src={experience.companyLogo}\n            sizes=\"large\"\n          />\n        </Grid>\n        <Grid item>\n          <b>\n            <label className={classes.listTitleSmall}>\n              {experience.start} - {experience.end}\n            </label>\n          </b>\n        </Grid>\n      </ListItemAvatar>\n    );\n  };\n  const populateListDescription = () => {\n    return (\n      <ListItemText\n        primary={\n          <Grid item>\n            <label className={classes.listTitle}>{experience.position}</label>\n          </Grid>\n        }\n        secondary={\n          <Grid container spacing={1}>\n            <Grid\n              container\n              className={\n                matches\n                  ? lg\n                    ? \"\"\n                    : classes.displayBlock\n                  : classes.displayBlock\n              }\n              md={12}\n              xs={12}\n              sm={12}\n              lg={12}\n              xl={12}\n              style={{ margin: \"2px\" }}\n              spacing={1}\n            >\n              <Grid item>\n                <span className={classes.listTitleSmall}>\n                  {experience.positionType}\n                </span>\n              </Grid>\n              <Grid item>\n                <span className={classes.listTitleSmall}>\n                  | {experience.company}\n                </span>\n              </Grid>\n              <Grid item>\n                <span className={classes.listTitleSmall}>\n                  | {experience.location}\n                </span>\n              </Grid>\n            </Grid>\n            <Grid container>{populateListworks()}</Grid>\n          </Grid>\n        }\n      ></ListItemText>\n    );\n  };\n  const populateListworks = () => {\n    return (\n      <List>\n        {roles.map((i, s) => {\n          return (\n            <ListItem key={s} className={classes.listItem}>\n              <FiberManualRecordRounded fontSize=\"small\" /> <span>{i}</span>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n  };\n  return (\n    <ListItem alignItems=\"center\" divider>\n      {experience ? (\n        <Grid container spacing={1}>\n          <Grid\n            item\n            className={\n              matches\n                ? lg\n                  ? classes.itemAlignGridCenter\n                  : classes.itemAlignGridCenterSm\n                : classes.itemAlignGridCenterSm\n            }\n          >\n            {populateAvatar()}\n          </Grid>\n          <Grid\n            item\n            className={\n              matches\n                ? lg\n                  ? classes.listContainer\n                  : classes.exlistContainer\n                : classes.exlistContainer\n            }\n          >\n            {populateListDescription()}\n          </Grid>\n        </Grid>\n      ) : (\n        \"Loading....\"\n      )}\n    </ListItem>\n  );\n};\nexport default ExperienceListItem;\n","import React from 'react';\nimport { profileDetail } from '../../api/data'\nimport { List, Container } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport ExperienceListItem from './exListItem';\n\nconst Experience = () => {\n    const classes = useStyles();\n    const experienceInfo = profileDetail.experience;\n\n    return (<Container className={classes.leftContainer} >\n\n        <List className={classes.root}>\n            {experienceInfo.map((ex, key) => {\n                return (<ExperienceListItem key={key} exlistItem={ex} />)\n            })}\n        </List>\n    </Container >)\n}\n\nexport default Experience;","import React, { useState, useEffect } from 'react';\nimport { Container, List, ListItemText, Divider } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\n\nconst SkillSets = (props) => {\n    const classes = useStyles();\n    const [skills, setSkills] = useState(props.skillSet)\n    useEffect(() => {\n        if (props.skillSet) {\n            setSkills(props.skillSet);\n        }\n    }, [props.skillSet])\n    return (<Container>\n        <label className={classes.listTitle}> {props.name}</label>\n        <Divider />\n        <List>\n            {skills.map((s, i) => {\n                return <ListItemText key={i} primary={s.name}></ListItemText>\n            })}\n        </List>\n    </Container>\n    )\n}\nexport default SkillSets;","import React, { useState, useEffect } from 'react';\nimport { Container, Divider } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport { Polar } from 'react-chartjs-2';\n\nconst SkillChart = (props) => {\n    const classes = useStyles();\n    const [skills, setSkills] = useState(props.skillSet)\n    const randomColor = () => {\n        const tempHex = Math.floor(Math.random() * 16777215).toString(16)\n        const r = parseInt(tempHex.substring(0, 2), 16);\n        const g = parseInt(tempHex.substring(2, 4), 16);\n        const b = parseInt(tempHex.substring(4, 6), 16);\n        return `rgba(${r},${g},${b},${70 / 100})`;\n    }\n    const dataforPolar = () => {\n        if (skills) {\n            var data = []\n            var bgcolor = []\n            var labels = []\n            skills.forEach(skill => {\n                data.push(skill.percent)\n                bgcolor.push(randomColor())\n                labels.push(skill.name)\n            });\n            var dataset = {\n                datasets: [{\n                    data: data,\n                    backgroundColor: bgcolor,\n                }],\n                labels: labels\n            }\n            console.log(dataset)\n            return dataset;\n        }\n    }\n    useEffect(() => {\n        if (props.skillSet) {\n            setSkills(props.skillSet);\n        }\n    }, [props.skillSet])\n    return (<Container>\n        <label className={classes.listTitle}> {props.name}</label>\n        <Divider />\n        <Polar data={dataforPolar()} />\n    </Container>\n    )\n}\nexport default SkillChart;","import React, { useState } from 'react';\nimport { Container, Grid } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport { profileDetail } from '../../api/data'\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport SkillSets from './skillSets';\nimport SkillChart from './skillChart';\nimport { PieChart, List } from '@material-ui/icons';\nimport { useMediaQuery } from '@material-ui/core';\n\n\nconst Skills = () => {\n\n    const classes = useStyles();\n    const matches = useMediaQuery('(min-width:600px)');\n    const lg = useMediaQuery('(min-width:1200px)');\n    const FrontEndSkills = profileDetail.skills.fe;\n    const BackEndSkills = profileDetail.skills.be;\n    const DatabaseSkills = profileDetail.skills.db;\n    const CloudSkills = profileDetail.skills.cloud;\n    const LearningSkills = profileDetail.skills.learning;\n    const FrameworkSkills = profileDetail.skills.framework;\n    const Libraries = profileDetail.skills.javascriptLibrary;\n    const Tools = profileDetail.skills.tools;\n    const [views, setViews] = useState(true);\n    const handleViewChange = () => {\n        setViews(!views)\n    }\n    const renderSkill = (name, data) => {\n        return (views) ? <SkillChart name={name} skillSet={data} /> : <SkillSets name={name} skillSet={data} />\n    }\n    return (<Container className={(matches) ? (lg) ? classes.leftContainer : classes.centerContainer : classes.centerContainer} >\n        <Grid container justify='center' alignContent='center' alignItems='center' style={{ paddingBottom: '5%' }}>\n            <ToggleButtonGroup size=\"large\" value={views} exclusive onChange={handleViewChange}>\n                <ToggleButton value={true}>\n                    <PieChart />\n                </ToggleButton>\n                <ToggleButton value={false}>\n                    <List />\n                </ToggleButton>\n            </ToggleButtonGroup>\n\n        </Grid>\n        <Grid container >\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Front End', FrontEndSkills)}\n            </Grid>\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Back End', BackEndSkills)}\n            </Grid>\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Database', DatabaseSkills)}\n\n            </Grid>\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Cloud', CloudSkills)}\n            </Grid>\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Frameworks', FrameworkSkills)}\n            </Grid>\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Libraries', Libraries)}\n            </Grid>\n\n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Beginner', LearningSkills)}\n            </Grid>\n            \n            <Grid item xs={12} md={6} lg={6} sm={12} xl={6} >\n                {renderSkill('Tools', Tools)}\n\n            </Grid>\n        </Grid>\n\n    </Container >)\n}\nexport default Skills;","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Card,\n  Chip,\n  CardMedia,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Divider,\n  Grid,\n} from \"@material-ui/core\";\nimport { useStyles } from \"../../layout/Style\";\nimport { useMediaQuery } from \"@material-ui/core\";\nconst PortfolioListItem = (props) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const lg = useMediaQuery(\"(min-width:1200px)\");\n  const [portfolio, setPortfolio] = useState(props.portfolio);\n\n  const [techList, setTechList] = useState([]);\n  useEffect(() => {\n    if (props.portfolio) {\n      var ports = props.portfolio;\n      var techList = ports.tech;\n      setPortfolio(ports);\n      setTechList(techList);\n    }\n  }, [props.portfolio]);\n  const renderTech = () => {\n    return techList.map((tech, i) => {\n      return (\n        <Chip\n          variant=\"outlined\"\n          style={{ margin: \"2px\" }}\n          size=\"small\"\n          label={tech}\n          key={i}\n        />\n      );\n      // return <span className={classes.buttonListSpan} key={i}>#{tech}</span>\n    });\n  };\n  const renderView = () => {\n    return (\n      <Card\n        onClick={() => {\n          window.open(portfolio.url, \"_blank\");\n        }}\n        onMouseOver={() => {\n          return null;\n        }}\n        className={\n          matches\n            ? lg\n              ? classes.cardRoot\n              : classes.cardRootSm\n            : classes.cardRootSm\n        }\n      >\n        <CardActionArea>\n          <CardMedia\n            className={classes.mediaImage}\n            image={portfolio.image}\n            title=\"Image\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              <a rel=\"noopener noreferrer\" href={portfolio.url} target=\"_blank\">\n                {portfolio.name}\n              </a>\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {portfolio.description}\n            </Typography>\n            <Divider />\n            <Container style={{ paddingTop: \"5%\" }}>\n              {techList ? renderTech() : \"\"}\n            </Container>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    );\n  };\n\n  return (\n    <Grid\n      item\n      className={classes.griItemMargin}\n      xs={12}\n      sm={12}\n      md={12}\n      lg={5}\n      xl={5}\n    >\n      {portfolio ? renderView() : \"\"}\n    </Grid>\n  );\n};\nexport default PortfolioListItem;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { useStyles } from \"../../layout/Style\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport PortfolioListItem from \"./portfolioListItem\";\nimport { profileDetail } from \"../../api/data\";\n\nconst Portfoilio = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(\"(min-width:600px)\");\n  const lg = useMediaQuery(\"(min-width:1200px)\");\n  const PortfolioList = profileDetail.portfolio;\n\n  return (\n    <Container\n      className={\n        matches\n          ? lg\n            ? classes.portContainerLg\n            : classes.portContainer\n          : classes.portContainerLg\n      }\n    >\n      <Grid\n        container\n        alignContent=\"center\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        {PortfolioList.map((port, i) => {\n          return <PortfolioListItem portfolio={port} key={i} />;\n        })}\n      </Grid>\n    </Container>\n  );\n};\nexport default Portfoilio;\n","import React, { useState, useEffect } from 'react';\nimport { Grid, ListItemText, ListItemAvatar, Avatar, ListItem } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport { useMediaQuery } from '@material-ui/core';\n\nconst EducationList = (props) => {\n\n    const classes = useStyles();\n    const matches = useMediaQuery('(min-width:600px)');\n    const lg = useMediaQuery('(min-width:1200px)');\n    const [education, setEducation] = useState(props.education)\n    useEffect(() => {\n        if (props.education) {\n            var data = props.education\n            setEducation(data);\n        }\n\n    }, [props.education])\n    const renderImage = () => {\n        return (<ListItemAvatar className={classes.listAvatar}>\n            <Avatar className={classes.avatarLargeSquare} src={education.image} variant=\"square\" sizes='large' />\n        </ListItemAvatar>)\n    }\n    const renderDescription = () => {\n        return (<ListItemText\n        >\n            <Grid container>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <label className={classes.listTitle}>{education.degreeName}</label>\n                </Grid>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <b><span className={classes.listTitleSmall}>{education.collageUniName}</span></b>\n                </Grid>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <span className={classes.listTitleSmall}> {education.location} | {education.year}</span>\n                </Grid>\n            </Grid>\n        </ListItemText>)\n    }\n    return (<ListItem alignItems=\"center\" divider>\n        <Grid container spacing={1} justify='center'>\n            <Grid item className={classes.itemAlignGridCenter} >\n                {renderImage()}\n            </Grid>\n            <Grid item className={(matches) ? (lg) ? classes.listContainer : classes.educationListContainer : classes.educationListContainer} >\n                {renderDescription()}\n            </Grid>\n        </Grid>\n    </ListItem>\n    )\n}\nexport default EducationList;","import React, { useState, useEffect } from 'react';\nimport { Grid, ListItemText, ListItem, CardMedia } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport { useMediaQuery } from '@material-ui/core';\n\nconst CertificateList = (props) => {\n\n    const classes = useStyles();\n    const matches = useMediaQuery('(min-width:600px)');\n    const lg = useMediaQuery('(min-width:1200px)');\n    const [certificate, setCertificate] = useState(props.certificate)\n    useEffect(() => {\n        if (props.certificate) {\n            var data = props.certificate\n            setCertificate(data);\n        }\n\n    }, [props.certificate])\n\n    const renderImage = () => {\n        return (\n            <CardMedia image={certificate.image} className={classes.mediaImage} >\n            </CardMedia>\n        )\n    }\n    const renderDescription = () => {\n        return (<ListItemText\n        >\n            <Grid container>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <label className={classes.listTitle}>{certificate.name}</label>\n                </Grid>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <b><span className={classes.listTitleSmall}>{certificate.certificateFrom}</span></b>\n                </Grid>\n                <Grid item lg={12} sm={12} xl={12} md={12} xs={12}>\n                    <span className={classes.listTitleSmall}> <a rel=\"noopener noreferrer\" href={certificate.url} target='_blank'> {certificate.id}</a> | {certificate.issueDate}</span>\n                </Grid>\n            </Grid>\n        </ListItemText>)\n    }\n    return (<ListItem alignItems=\"center\" divider>\n        <Grid container spacing={1} justify='center'>\n            <Grid item className={classes.itemAlignGridCenter} >\n                {renderImage()}\n            </Grid>\n            <Grid item className={(matches) ? (lg) ? classes.listContainer : classes.educationListContainer : classes.educationListContainer} >\n                {renderDescription()}\n            </Grid>\n        </Grid>\n    </ListItem>\n    )\n}\nexport default CertificateList;","import React from 'react';\nimport { Container, Grid, Divider, List, Typography } from '@material-ui/core'\nimport { useStyles } from '../../layout/Style'\nimport { useMediaQuery } from '@material-ui/core';\nimport { profileDetail } from '../../api/data'\nimport EducationList from './educationList';\nimport CertificateList from './certifications';\n\nconst Education = () => {\n    const classes = useStyles();\n    const matches = useMediaQuery('(min-width:600px)');\n    const lg = useMediaQuery('(min-width:1200px)');\n    const educationList = profileDetail.education;\n    const certificateList = profileDetail.certifications\n    return (<Container\n        className={(matches) ? (lg) ? classes.portContainerLg : classes.portContainer : classes.portContainerLg} >\n        <Grid container>\n            <Grid container  >\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Certificates\n                </Typography>\n                <Divider />\n            </Grid>\n            <Grid container>\n                <List className={classes.fullWidthRoot}>\n                    {certificateList.map((cer, i) => {\n                        return <CertificateList certificate={cer} key={i} />\n                    })}\n                </List>\n            </Grid>\n            <hr />\n        </Grid>\n\n        <Grid container>\n            <Grid container  >\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Education\n                </Typography>\n                <Divider />\n            </Grid>\n            <Grid container>\n                <List className={classes.fullWidthRoot}>\n                    {educationList.map((edu, i) => {\n                        return <EducationList education={edu} key={i} />\n                    })}\n                </List>\n            </Grid>\n            <hr />\n        </Grid>\n\n    </Container >)\n}\nexport default Education;","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core'\nimport TabPanel from './TabPanel'\nimport PersonalDetail from '../components/personalDetail/personalDetail'\nimport Experience from '../components/exeperience/experience'\nimport Skills from '../components/skills/skills'\nimport Portfolio from '../components/portfolio/portfolio'\nimport Education from '../components/education/education';\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nfunction LayoutTabs() {\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div >\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" variant=\"scrollable\"\n                scrollButtons=\"off\">\n                <Tab label=\"Home\" {...a11yProps(0)} />\n                <Tab label=\"Experience\" {...a11yProps(1)} />\n                <Tab label=\"Portfolio\" {...a11yProps(2)} />\n                <Tab label=\"Skills\" {...a11yProps(3)} />\n                <Tab label=\"Education\" {...a11yProps(4)} />\n            </Tabs>\n            <TabPanel value={value} index={0}>\n                <PersonalDetail />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <Experience />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <Portfolio />            </TabPanel>\n            <TabPanel value={value} index={3}>\n                <Skills />\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n                <Education />\n            </TabPanel>\n        </div>\n    );\n}\nexport default LayoutTabs;","import React from 'react';\nimport { Paper, Grid } from '@material-ui/core'\nimport { useStyles } from './Style'\nimport LayoutTabs from './Tabs';\nfunction Layout() {\n    const classes = useStyles();\n    return (<div>\n        <Grid item xs={12} xl={12} sm={12} md={12}>\n            <div className={classes.root}>\n                <Paper elevation={2} >\n                    <LayoutTabs />\n                </Paper>\n            </div>\n        </Grid>\n    </div>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\nimport Layout from './layout/Layout'\nfunction App() {\n  return (\n    <div className='App'>\n      <React.Fragment >\n        <Layout /></React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}